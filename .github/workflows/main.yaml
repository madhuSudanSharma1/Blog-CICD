name: GitHub Actions For CI
run-name: ${{ github.actor }} is running a GitHub Actions workflow for CI

on: 
  pull_request:
    branches: [ "dev"]

  push:
    branches: [ "dev" ]

jobs:
# Runs on every thing PR or push to any branch
  commitlint:
    if: github.event_name == 'pull_request' 
    name: Lint Commits
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.0.0'
      - name: Install Commitlint
        run: |
          npm install --save-dev @commitlint/cli @commitlint/config-conventional
      - name: Add commitlint config
        run: |
          echo "module.exports = {extends: ['@commitlint/config-conventional']};" > commitlint.config.js
      - name: Run Commitlint
        run: |
          git log origin/${{ github.base_ref }}..HEAD --pretty=format:"%s" | npx commitlint


# Runs on every thing PR or push to any branch
  lint-all-services:
    name: Lint All Services
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run frontend lint & security
        uses: ./.github/actions/lint-and-security-checks
        with:
          directory: frontend
          
      - name: Run backend1 lint & security
        uses: ./.github/actions/lint-and-security-checks
        with:
          directory: backend1

      - name: Run backend2 lint & security
        uses: ./.github/actions/lint-and-security-checks
        with:
          directory: backend2

      - name: Final Status
        run: echo "All services passed lint and security checks."

# For All Pull Requests
  notify-slack-pr:
    name: Notify Slack on PR
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: [commitlint, lint-all-services]
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4   
  
      - name: Notify Slack
        uses: ./.github/actions/slack
        with:
          message: '{"text": "A new Pull Request was created by *${{ github.actor }}* targeting ${{ github.base_ref }} branch.\n<${{ github.event.pull_request.html_url }}|View PR>"}'

# For All Push
  notify-slack-push:
    name: Notify Slack on Push
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: [ lint-all-services]
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Notify Slack
        uses: ./.github/actions/slack
        with:
          message: '{"text": "A new Push was made by *${{ github.actor }}* to ${{ github.base_ref }} branch."}'

## Push to Dev OR MAIN â†’ Docker Build & Push
  build-and-push-frontend:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: [lint-all-services]
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Check if frontend has changed
        id: check_frontend
        uses: ./.github/actions/has-changed
        with:
          dir: frontend

      - name: Calculate version
        id: sem-rel
        uses: ./.github/actions/version-service
        with:
          directory: frontend
          branch: dev

      - name: Build and Push Docker Image
        if: steps.check_frontend.outputs.changed == 'true'
        uses: ./.github/actions/build-and-push
        with:
          service: frontend
          tag: ${{ steps.sem-rel.outputs.version }}

          package_artifact: true

  build-and-push-backends:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.PAT_GITHUB }}
    needs: [lint-all-services]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Check if backend1 has changed
        id: check_backend1
        uses: ./.github/actions/has-changed
        with:
          dir: backend1
      - name: Calculate version for backend1
        id: version-backend1
        uses: ./.github/actions/version-service
        with:
          directory: backend1
          branch: dev

      - name: Check if backend2 has changed
        id: check_backend2
        uses: ./.github/actions/has-changed
        with:
          dir: backend2
      - name: Calculate version for backend2
        id: version-backend2
        uses: ./.github/actions/version-service
        with:
          directory: backend2
          branch: dev

      - name: Build and Push Docker Image (backend1)
        if: steps.check_backend1.outputs.changed == 'true'
        uses: ./.github/actions/build-and-push
        with:
          service: backend1
          tag: ${{ steps.version-backend1.outputs.version }}
          package_artifact: true

      - name: Build and Push Docker Image (backend2)
        if: steps.check_backend2.outputs.changed == 'true'
        uses: ./.github/actions/build-and-push
        with:
          service: backend2
          tag: ${{ steps.version-backend2.outputs.version }}
          package_artifact: true
